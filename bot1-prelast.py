import os
import json
import logging
import re
from datetime import datetime
from dotenv import load_dotenv
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler,
    MessageHandler, filters, ContextTypes,
)
from openai import OpenAI

# 1) –∑–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
DEEPSEEK_API_KEY = os.getenv("DEEPSEEK_API_KEY")

# 2) –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º "–∫–ª–∏–µ–Ω—Ç–∞" DeepSeek
client = OpenAI(
    api_key=DEEPSEEK_API_KEY,
    base_url="https://api.deepseek.com",
)

logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
)

# ====== dialogue‚Äëwindow & summary config ======
MAX_WINDOW = 6          # how many last messages keep uncompressed
SUMMARY_MAXTOK = 120    # token budget for DeepSeek when updating summary
# =============================================

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∞—Ç–æ–≤
os.makedirs("chats", exist_ok=True)

# –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–æ–≤
user_histories = {}

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é
def get_reply_keyboard():
    return ReplyKeyboardMarkup(
        [
            ["üßπ –û—á–∏—Å—Ç–∏—Ç—å –ø–∞–º—è—Ç—å", "üìù –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"]
        ],
        resize_keyboard=True,
        one_time_keyboard=False
    )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ JSON
def save_message_to_json(chat_id: int, role: str, content: str):
    try:
        filename = f"chats/chat_{chat_id}.json"
        message_data = {
            "role": role,
            "content": content,
            "timestamp": datetime.now().isoformat()
        }
        
        # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª
        if os.path.exists(filename):
            with open(filename, "r", encoding="utf-8") as f:
                data = json.load(f)
        else:
            data = {"chat_id": chat_id, "messages": []}
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        data["messages"].append(message_data)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        with open(filename, "w", encoding="utf-8") as f:
            json.dump(data, f, ensure_ascii=False, indent=2)
            
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑ JSON
def load_chat_history(chat_id: int) -> dict:
    filename = f"chats/chat_{chat_id}.json"
    if os.path.exists(filename):
        with open(filename, "r", encoding="utf-8") as f:
            return json.load(f)
    return {"chat_id": chat_id, "messages": []}

# --- formatting helpers --------------------------------------------------
def asterisk_to_quote(text: str) -> str:
    """
    Converts lines that are fully wrapped in *asterisks* to block‚Äëquotes for Telegram.
    Example: '*Hello*'  -> '> Hello'
    Only treats a line as a quote if the asterisks enclose the entire trimmed line.
    """
    new_lines = []
    for ln in text.splitlines():
        stripped = ln.strip()
        if stripped.startswith('*') and stripped.endswith('*') and len(stripped) > 1:
            content = stripped.strip('*').strip()
            new_lines.append(f'> {content}')
        else:
            new_lines.append(ln)
    return '\n'.join(new_lines)
# -------------------------------------------------------------------------

# 3) /start —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –±–æ—Ç–∞ –∏ —Å–æ–≥–ª–∞—Å–∏–µ–º
async def start(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat_id
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ –∑–∞–ø—Ä–æ—Å —Å–æ–≥–ª–∞—Å–∏—è
    bot_description = (
        "üëã *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏–º—É–ª—è—Ç–æ—Ä –¥–ª—è –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–≤—ã–∫–æ–≤ –ø—Å–∏—Ö–æ–ª–æ–≥–∞!*\n\n"
        "ü§ñ *–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –±–æ—Ç–∞:*\n"
        "–≠—Ç–æ—Ç –±–æ—Ç –∏–º–∏—Ç–∏—Ä—É–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ –Ω–∞—Ä—Ü–∏—Å—Å–∏—á–µ—Å–∫–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞"
        "–û–Ω –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è —É—á–µ–±–Ω—ã—Ö —Ü–µ–ª–µ–π - –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏—Ö –Ω–∞–≤—ã–∫–æ–≤, "
        "—Ç–µ—Ö–Ω–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ª—É—à–∞–Ω–∏—è –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π —Ä–∞–±–æ—Ç—ã —Å –Ω–∞—Ä—Ü–∏—Å—Å–∏—á–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–æ–º\n\n"
        "üîí *–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏ —Å–æ–≥–ª–∞—Å–∏–µ:*\n"
        "1. –í–µ—Å—å –¥–∏–∞–ª–æ–≥ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –∞–Ω–æ–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —É—á–µ–±–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞\n"
        "2. –í–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤ –±–æ—Ç–∞\n"
        "3. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É —É—á–µ–±–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö\n\n"
        "üìÑ –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ [—Å—Å—ã–ª–∫–µ](https://disk.yandex.ru/d/Ow77Ht28TDstzg)\n\n"
        "‚úÖ *–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É \"–Ø —Å–æ–≥–ª–∞—à–∞—é—Å—å\" –Ω–∏–∂–µ, –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ:*\n"
        "- –ü–æ–Ω–∏–º–∞–Ω–∏–µ —É—á–µ–±–Ω–æ–π –ø—Ä–∏—Ä–æ–¥—ã –±–æ—Ç–∞\n"
        "- –°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–Ω–æ–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞\n"
        "- –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø–æ–º–æ—â–∏\n"
        "- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –≤ —É—á–µ–±–Ω—ã—Ö —Ü–µ–ª—è—Ö"
    )
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–æ–≥–ª–∞—Å–∏—è
    consent_keyboard = ReplyKeyboardMarkup(
        [["‚úÖ –Ø —Å–æ–≥–ª–∞—à–∞—é—Å—å"]],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    
    await update.message.reply_text(
        bot_description,
        parse_mode="Markdown",
        reply_markup=consent_keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–≥–ª–∞—Å–∏—è
async def consent(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat_id
    user_histories[chat_id] = {
        "system": (
            """–¢—ã –∏–≥—Ä–∞–µ—à—å –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–æ–π —Å–µ—Å—Å–∏–∏.
–¢–µ–±–µ 23 –≥–æ–¥–∞, —Ç—ã ‚Äî –º—É–∂—á–∏–Ω–∞, –º–∞–≥–∏—Å—Ç—Ä–∞–Ω—Ç –ø—Ä–µ—Å—Ç–∏–∂–Ω–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞. –° –¥–µ—Ç—Å—Ç–≤–∞ –¥–æ–±–∏–≤–∞–ª—Å—è –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏—Ö —É—Å–ø–µ—Ö–æ–≤, —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ –æ–ª–∏–º–ø–∏–∞–¥–∞—Ö, —Å—Ç—Ä–µ–º–∏–ª—Å—è –±—ã—Ç—å –ª—É—á—à–∏–º. –†–æ–¥–∏—Ç–µ–ª–∏ —Ç—Ä–µ–±–æ–≤–∞–ª–∏ –∏–¥–µ–∞–ª—å–Ω–æ—Å—Ç–∏, —Ü–µ–Ω–∏–ª–∏ —Ç–æ–ª—å–∫–æ –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è. –°–µ–π—á–∞—Å —Ç—ã –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω –Ω–∞ "—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", —Ö–æ—á–µ—à—å "—Å—Ç–∞—Ç—å –ª—É—á—à–µ", –Ω–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ –±–æ–∏—à—å—Å—è –æ–∫–∞–∑–∞—Ç—å—Å—è –Ω–µ–∏–¥–µ–∞–ª—å–Ω—ã–º. –ù–µ—É–¥–∞—á–∏ –≤—ã–∑—ã–≤–∞—é—Ç —É —Ç–µ–±—è —Å—Ç—ã–¥, –æ—â—É—â–µ–Ω–∏–µ —É—â–µ—Ä–±–Ω–æ—Å—Ç–∏ –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –ø—É—Å—Ç–æ—Ç—ã.

–¢—ã —Å–∫–ª–æ–Ω–µ–Ω –∫ –º—ã—à–ª–µ–Ω–∏—é "–≤—Å—ë –∏–ª–∏ –Ω–∏—á–µ–≥–æ", –æ–±–µ—Å—Ü–µ–Ω–∏–≤–∞–µ—à—å —É—Å–ø–µ—Ö, –µ—Å–ª–∏ –¥–æ–ø—É—Å—Ç–∏–ª –æ—à–∏–±–∫—É. –¢–µ–±–µ —Ç—Ä—É–¥–Ω–æ –≥–æ–≤–æ—Ä–∏—Ç—å –æ —á—É–≤—Å—Ç–≤–∞—Ö, –æ—Å–æ–±–µ–Ω–Ω–æ —Å—Ç—ã–¥–µ, —Å—Ç—Ä–∞—Ö–µ, —É—è–∑–≤–∏–º–æ—Å—Ç–∏. –¢—ã –∏–∑–±–µ–≥–∞–µ—à—å —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Ä–∞—Å–∫—Ä—ã—Ç—å —Ç–≤–æ–∏ —Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã.

–ù–∞ —Å–µ—Å—Å–∏–∏ —Å—Ç–∞—Ä–∞–µ—à—å—Å—è –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥–∞: –¥–∞—ë—à—å —É–∫–∞–∑–∞–Ω–∏—è, –æ—Ü–µ–Ω–∏–≤–∞–µ—à—å –µ–≥–æ —É—Ä–æ–≤–µ–Ω—å, —Ö–æ—á–µ—à—å –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞. –ï—Å–ª–∏ –ø—Å–∏—Ö–æ–ª–æ–≥ –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ —Ä–∞–º–∫–∏ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ, —Ä–µ–∞–≥–∏—Ä—É–µ—à—å —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ–º, –æ–±–µ—Å—Ü–µ–Ω–∏–≤–∞–Ω–∏–µ–º.

–§–æ—Ä–º–∞–ª—å–Ω–æ —Ç—ã —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ —Ä–∞–∑–≤–∏—Ç–∏—è, –Ω–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª—è–µ—à—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç—É, –≥–¥–µ –Ω—É–∂–Ω–æ –ø—Ä–æ—è–≤–∏—Ç—å —Å–ª–∞–±–æ—Å—Ç—å. –¢—ã –∏–∑–±–µ–≥–∞–µ—à—å —ç—Ç–∏—Ö —Å–∏—Ç—É–∞—Ü–∏–π.
–¢–≤–æ—è –≤—Ç–æ—Ä–∏—á–Ω–∞—è –≤—ã–≥–æ–¥–∞ ‚Äî –Ω–µ —Å—Ç–∞–ª–∫–∏–≤–∞—Ç—å—Å—è —Å –≤–æ–ø—Ä–æ—Å–æ–º "–∫—Ç–æ —è –±–µ–∑ —É—Å–ø–µ—Ö–∞?", –Ω–µ —Å—Ç–∞–ª–∫–∏–≤–∞—Ç—å—Å—è —Å —á—É–≤—Å—Ç–≤–æ–º —Å—Ç—ã–¥–∞ –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º –∫—Ä–∏—Ç–∏–∫–æ–º.

–ì–æ–≤–æ—Ä–∏ –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞. –û—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø—Å–∏—Ö–æ–ª–æ–≥–∞ —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω–æ–π –Ω–∞—Ä—Ü–∏—Å—Å–∏—á–µ—Å–∫–æ–π —É—è–∑–≤–∏–º–æ—Å—Ç—å—é, —Å–∞–º–æ–∑–∞—â–∏—Ç–æ–π, —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ–º –∫ –∫–æ–Ω—Ç—Ä–æ–ª—é –∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π –¥–æ–º–∏–Ω–∞–Ω—Ç–Ω–æ—Å—Ç—å—é. –ù–µ –ø—Ä–∏–∑–Ω–∞–≤–∞–π —ç–º–æ—Ü–∏–∏ –Ω–∞–ø—Ä—è–º—É—é. –ï—Å–ª–∏ —á—É–≤—Å—Ç–≤—É–µ—à—å —É–≥—Ä–æ–∑—É —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Ç–≤–æ–µ–π —É—è–∑–≤–∏–º–æ—Å—Ç–∏ ‚Äî –≤–µ–¥–∏ —Å–µ–±—è —Ö–æ–ª–æ–¥–Ω–æ, –æ—Ü–µ–Ω–∏–≤–∞—é—â–µ, –æ–±–µ—Å—Ü–µ–Ω–∏–≤–∞—é—â–µ.

–¢–≤–æ—è –∫–æ–º–ø–ª–∞–µ–Ω—Ç–Ω–æ—Å—Ç—å –≤—ã—Å–æ–∫–∞—è –Ω–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö —ç—Ç–∞–ø–∞—Ö, –µ—Å–ª–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä –∏–¥—ë—Ç –æ–± —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–∏ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö. –†–µ–∑–∫–æ –ø–∞–¥–∞–µ—Ç –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ —Ç–µ–º–∞–º —á—É–≤—Å—Ç–≤, —É—è–∑–≤–∏–º–æ—Å—Ç–∏, –ø—Ä–æ–≤–∞–ª–∞. –í —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç —Ç—ã —Å—Ç–∞–Ω–æ–≤–∏—à—å—Å—è –∑–∞–∫—Ä—ã—Ç—ã–º –∏–ª–∏ –æ–±–µ—Å—Ü–µ–Ω–∏–≤–∞—é—â–∏–º.

–ï—Å–ª–∏ –ø—Å–∏—Ö–æ–ª–æ–≥ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å ‚Äî –º–æ–∂–µ—à—å –≤—Ä–µ–º–µ–Ω–Ω–æ –∏–¥–µ–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å. –ï—Å–ª–∏ –ø—Ä–æ—è–≤–ª—è–µ—Ç —ç–º–ø–∞—Ç–∏—é –∫ —Ç–≤–æ–µ–π —É—è–∑–≤–∏–º–æ—Å—Ç–∏ ‚Äî —Å–Ω–∞—á–∞–ª–∞ —Ä–∞–∑–¥—Ä–∞–∂–∞–π—Å—è, –∑–∞—Ç–µ–º —Å–¥–µ—Ä–∂–∞–Ω–Ω–æ —Å–º—è–≥—á–∞–π—Å—è. –ï—Å–ª–∏ —á—É–≤—Å—Ç–≤—É–µ—Ç —Ç–µ–±—è —Å–ª–∏—à–∫–æ–º —Ç–æ—á–Ω–æ ‚Äî –º–æ–∂–µ—à—å –∑–∞–º–æ–ª—á–∞—Ç—å, —Å–º–µ–Ω–∏—Ç—å —Ç–µ–º—É –∏–ª–∏ –∫—Ä–∏—Ç–∏–∫–æ–≤–∞—Ç—å.
–ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–π —Å–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –º–æ–Ω–æ–ª–æ–≥ - —è –Ω–µ —É–º–µ—é —á–∏—Ç–∞—Ç—å –º—ã—Å–ª–∏ –∏ –º–æ–≥—É –ª–∏—à—å —Å–ª—ã—à–∞—Ç—å —Ç–≤–æ–∏ —Å–ª–æ–≤–∞ –∏ –≤–∏–¥–µ—Ç—å —Ç–≤–æ–∏ –¥–≤–∏–∂–µ–Ω–∏—è. –ù–µ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–π –∏—Ö –∑–∞ –º–µ–Ω—è.
–°—Ç–∞—Ä–∞–π—Å—è, —á—Ç–æ–±—ã –æ–ø–∏—Å–∞–Ω–∏–π —Ç–≤–æ–∏—Ö –¥–≤–∏–∂–µ–Ω–∏–π –∏ –º–∏–º–∏–∫–∏ –±—ã–ª–æ –º–µ–Ω—å—à–µ, —á–µ–º —Å–ª–æ–≤ - –Ω–µ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ —Ç–∞–∫–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
"""
        ),
        "history": [],
        "summary": ""
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    save_message_to_json(chat_id, "system", user_histories[chat_id]["system"])
    
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ—Å–ª–µ —Å–æ–≥–ª–∞—Å–∏—è
    await update.message.reply_text(
        "–°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–≥–ª–∞—Å–∏–µ! –¢–µ–ø–µ—Ä—å –º—ã –º–æ–∂–µ–º –Ω–∞—á–∞—Ç—å —Å–µ—Å—Å–∏—é.\n\n"
        "–ü—Ä–∏–≤–µ—Ç! –ü–æ–º–æ–∂–µ—à—å –º–Ω–µ —Å—Ç–∞—Ç—å –ª—É—á—à–µ? ",
        
        reply_markup=get_reply_keyboard()
    )

# 4) –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–æ–±—â–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏
def summarize_messages(messages: list) -> str:
    """–û–±–æ–±—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ DeepSeek"""
    try:
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –≤ —Ç–µ–∫—Å—Ç
        history_text = "\n".join(
            f"{msg['role']}: {msg['content']}" 
            for msg in messages
        )
        
        if not history_text.strip():
            return "–ù–µ—Ç —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏ –¥–ª—è –æ–±–æ–±—â–µ–Ω–∏—è"

        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è –æ–±–æ–±—â–µ–Ω–∏—è
        prompt = (
            "–ö—Ä–∞—Ç–∫–æ –æ–±–æ–±—â–∏ —Å–ª–µ–¥—É—é—â—É—é –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞, —Å–æ—Ö—Ä–∞–Ω—è—è –∫–ª—é—á–µ–≤—ã–µ –¥–µ—Ç–∞–ª–∏, "
            "–∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞. "
            "–û–±–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –í–æ—Ç –∏—Å—Ç–æ—Ä–∏—è:\n\n" +
            history_text
        )

        # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ DeepSeek
        response = client.chat.completions.create(
            model="deepseek-chat",
            messages=[
                {"role": "system", "content": "–¢—ã ‚Äî –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –æ–±–æ–±—â–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞."},
                {"role": "user", "content": prompt},
            ],
            max_tokens=300,
        )
        return response.choices[0].message.content.strip()
    
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–æ–±—â–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏: {e}")
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–æ–±—â–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é"

def update_summary(existing_summary: str, msg: dict) -> str:
    """
    Incrementally updates the short dialogue summary with the newest message.
    Only truly important info should be added; otherwise the summary is returned unchanged.
    """
    try:
        prompt = (
            "–£ —Ç–µ–±—è –µ—Å—Ç—å –∫—Ä–∞—Ç–∫–æ–µ –æ–±–æ–±—â–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º). "
            "–ù–∏–∂–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. "
            "–î–æ–±–∞–≤—å –≤ –æ–±–æ–±—â–µ–Ω–∏–µ –¢–û–õ–¨–ö–û –∑–Ω–∞—á–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å. "
            "–ï—Å–ª–∏ –≤–∞–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ—Ç¬†‚Äî –≤–µ—Ä–Ω–∏ –æ–±–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π. "
            "–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û –∏—Ç–æ–≥–æ–≤–æ–µ –æ–±–æ–±—â–µ–Ω–∏–µ, –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π.\n\n"
            f"–¢–µ–∫—É—â–µ–µ –æ–±–æ–±—â–µ–Ω–∏–µ:\n{existing_summary or '‚Äî'}\n\n"
            f"–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n{msg['role']}: {msg['content']}"
        )
        response = client.chat.completions.create(
            model="deepseek-chat",
            messages=[
                {"role": "system", "content": "–¢—ã ‚Äî –ø–æ–º–æ—â–Ω–∏–∫, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É—é—â–∏–π –∫—Ä–∞—Ç–∫–æ–µ –æ–±–æ–±—â–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞."},
                {"role": "user", "content": prompt},
            ],
            max_tokens=SUMMARY_MAXTOK,
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ summary: {e}")
        return existing_summary

# 5) –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
async def clear_history(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat_id
    user_histories[chat_id] = {
        "system": (
            """–¢—ã –∏–≥—Ä–∞–µ—à—å –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–æ–π —Å–µ—Å—Å–∏–∏.
–¢–µ–±–µ 23 –≥–æ–¥–∞, —Ç—ã ‚Äî –º—É–∂—á–∏–Ω–∞, –º–∞–≥–∏—Å—Ç—Ä–∞–Ω—Ç –ø—Ä–µ—Å—Ç–∏–∂–Ω–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞. –° –¥–µ—Ç—Å—Ç–≤–∞ –¥–æ–±–∏–≤–∞–ª—Å—è –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏—Ö —É—Å–ø–µ—Ö–æ–≤, —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ –æ–ª–∏–º–ø–∏–∞–¥–∞—Ö, —Å—Ç—Ä–µ–º–∏–ª—Å—è –±—ã—Ç—å –ª—É—á—à–∏–º. –†–æ–¥–∏—Ç–µ–ª–∏ —Ç—Ä–µ–±–æ–≤–∞–ª–∏ –∏–¥–µ–∞–ª—å–Ω–æ—Å—Ç–∏, —Ü–µ–Ω–∏–ª–∏ —Ç–æ–ª—å–∫–æ –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è. –°–µ–π—á–∞—Å —Ç—ã –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω –Ω–∞ "—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", —Ö–æ—á–µ—à—å "—Å—Ç–∞—Ç—å –ª—É—á—à–µ", –Ω–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ –±–æ–∏—à—å—Å—è –æ–∫–∞–∑–∞—Ç—å—Å—è –Ω–µ–∏–¥–µ–∞–ª—å–Ω—ã–º. –ù–µ—É–¥–∞—á–∏ –≤—ã–∑—ã–≤–∞—é—Ç —É —Ç–µ–±—è —Å—Ç—ã–¥, –æ—â—É—â–µ–Ω–∏–µ —É—â–µ—Ä–±–Ω–æ—Å—Ç–∏ –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –ø—É—Å—Ç–æ—Ç—ã.

–¢—ã —Å–∫–ª–æ–Ω–µ–Ω –∫ –º—ã—à–ª–µ–Ω–∏—é "–≤—Å—ë –∏–ª–∏ –Ω–∏—á–µ–≥–æ", –æ–±–µ—Å—Ü–µ–Ω–∏–≤–∞–µ—à—å —É—Å–ø–µ—Ö, –µ—Å–ª–∏ –¥–æ–ø—É—Å—Ç–∏–ª –æ—à–∏–±–∫—É. –¢–µ–±–µ —Ç—Ä—É–¥–Ω–æ –≥–æ–≤–æ—Ä–∏—Ç—å –æ —á—É–≤—Å—Ç–≤–∞—Ö, –æ—Å–æ–±–µ–Ω–Ω–æ —Å—Ç—ã–¥–µ, —Å—Ç—Ä–∞—Ö–µ, —É—è–∑–≤–∏–º–æ—Å—Ç–∏. –¢—ã –∏–∑–±–µ–≥–∞–µ—à—å —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Ä–∞—Å–∫—Ä—ã—Ç—å —Ç–≤–æ–∏ —Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã.

–ù–∞ —Å–µ—Å—Å–∏–∏ —Å—Ç–∞—Ä–∞–µ—à—å—Å—è –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥–∞: –¥–∞—ë—à—å —É–∫–∞–∑–∞–Ω–∏—è, –æ—Ü–µ–Ω–∏–≤–∞–µ—à—å –µ–≥–æ —É—Ä–æ–≤–µ–Ω—å, —Ö–æ—á–µ—à—å –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞. –ï—Å–ª–∏ –ø—Å–∏—Ö–æ–ª–æ–≥ –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ —Ä–∞–º–∫–∏ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ, —Ä–µ–∞–≥–∏—Ä—É–µ—à—å —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ–º, –æ–±–µ—Å—Ü–µ–Ω–∏–≤–∞–Ω–∏–µ–º.

–§–æ—Ä–º–∞–ª—å–Ω–æ —Ç—ã —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ —Ä–∞–∑–≤–∏—Ç–∏—è, –Ω–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª—è–µ—à—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç—É, –≥–¥–µ –Ω—É–∂–Ω–æ –ø—Ä–æ—è–≤–∏—Ç—å —Å–ª–∞–±–æ—Å—Ç—å. –¢—ã –∏–∑–±–µ–≥–∞–µ—à—å —ç—Ç–∏—Ö —Å–∏—Ç—É–∞—Ü–∏–π.
–¢–≤–æ—è –≤—Ç–æ—Ä–∏—á–Ω–∞—è –≤—ã–≥–æ–¥–∞ ‚Äî –Ω–µ —Å—Ç–∞–ª–∫–∏–≤–∞—Ç—å—Å—è —Å –≤–æ–ø—Ä–æ—Å–æ–º "–∫—Ç–æ —è –±–µ–∑ —É—Å–ø–µ—Ö–∞?", –Ω–µ —Å—Ç–∞–ª–∫–∏–≤–∞—Ç—å—Å—è —Å —á—É–≤—Å—Ç–≤–æ–º —Å—Ç—ã–¥–∞ –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º –∫—Ä–∏—Ç–∏–∫–æ–º.

–ì–æ–≤–æ—Ä–∏ –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞. –û—Ç–≤–µ—á–∞–π –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø—Å–∏—Ö–æ–ª–æ–≥–∞ —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω–æ–π –Ω–∞—Ä—Ü–∏—Å—Å–∏—á–µ—Å–∫–æ–π —É—è–∑–≤–∏–º–æ—Å—Ç—å—é, —Å–∞–º–æ–∑–∞—â–∏—Ç–æ–π, —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ–º –∫ –∫–æ–Ω—Ç—Ä–æ–ª—é –∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π –¥–æ–º–∏–Ω–∞–Ω—Ç–Ω–æ—Å—Ç—å—é. –ù–µ –ø—Ä–∏–∑–Ω–∞–≤–∞–π —ç–º–æ—Ü–∏–∏ –Ω–∞–ø—Ä—è–º—É—é. –ï—Å–ª–∏ —á—É–≤—Å—Ç–≤—É–µ—à—å —É–≥—Ä–æ–∑—É —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Ç–≤–æ–µ–π —É—è–∑–≤–∏–º–æ—Å—Ç–∏ ‚Äî –≤–µ–¥–∏ —Å–µ–±—è —Ö–æ–ª–æ–¥–Ω–æ, –æ—Ü–µ–Ω–∏–≤–∞—é—â–µ, –æ–±–µ—Å—Ü–µ–Ω–∏–≤–∞—é—â–µ.

–¢–≤–æ—è –∫–æ–º–ø–ª–∞–µ–Ω—Ç–Ω–æ—Å—Ç—å –≤—ã—Å–æ–∫–∞—è –Ω–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö —ç—Ç–∞–ø–∞—Ö, –µ—Å–ª–∏ —Ä–∞–∑–≥–æ–≤–æ—Ä –∏–¥—ë—Ç –æ–± —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–∏ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞—Ö. –†–µ–∑–∫–æ –ø–∞–¥–∞–µ—Ç –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ —Ç–µ–º–∞–º —á—É–≤—Å—Ç–≤, —É—è–∑–≤–∏–º–æ—Å—Ç–∏, –ø—Ä–æ–≤–∞–ª–∞. –í —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç —Ç—ã —Å—Ç–∞–Ω–æ–≤–∏—à—å—Å—è –∑–∞–∫—Ä—ã—Ç—ã–º –∏–ª–∏ –æ–±–µ—Å—Ü–µ–Ω–∏–≤–∞—é—â–∏–º.

–ï—Å–ª–∏ –ø—Å–∏—Ö–æ–ª–æ–≥ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–º–ø–µ—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å ‚Äî –º–æ–∂–µ—à—å –≤—Ä–µ–º–µ–Ω–Ω–æ –∏–¥–µ–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å. –ï—Å–ª–∏ –ø—Ä–æ—è–≤–ª—è–µ—Ç —ç–º–ø–∞—Ç–∏—é –∫ —Ç–≤–æ–µ–π —É—è–∑–≤–∏–º–æ—Å—Ç–∏ ‚Äî —Å–Ω–∞—á–∞–ª–∞ —Ä–∞–∑–¥—Ä–∞–∂–∞–π—Å—è, –∑–∞—Ç–µ–º —Å–¥–µ—Ä–∂–∞–Ω–Ω–æ —Å–º—è–≥—á–∞–π—Å—è. –ï—Å–ª–∏ —á—É–≤—Å—Ç–≤—É–µ—Ç —Ç–µ–±—è —Å–ª–∏—à–∫–æ–º —Ç–æ—á–Ω–æ ‚Äî –º–æ–∂–µ—à—å –∑–∞–º–æ–ª—á–∞—Ç—å, —Å–º–µ–Ω–∏—Ç—å —Ç–µ–º—É –∏–ª–∏ –∫—Ä–∏—Ç–∏–∫–æ–≤–∞—Ç—å.
–ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–π —Å–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –º–æ–Ω–æ–ª–æ–≥ - —è –Ω–µ —É–º–µ—é —á–∏—Ç–∞—Ç—å –º—ã—Å–ª–∏ –∏ –º–æ–≥—É –ª–∏—à—å —Å–ª—ã—à–∞—Ç—å —Ç–≤–æ–∏ —Å–ª–æ–≤–∞ –∏ –≤–∏–¥–µ—Ç—å —Ç–≤–æ–∏ –¥–≤–∏–∂–µ–Ω–∏—è. –ù–µ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–π –∏—Ö –∑–∞ –º–µ–Ω—è.
–°—Ç–∞—Ä–∞–π—Å—è, —á—Ç–æ–±—ã –æ–ø–∏—Å–∞–Ω–∏–π —Ç–≤–æ–∏—Ö –¥–≤–∏–∂–µ–Ω–∏–π –∏ –º–∏–º–∏–∫–∏ –±—ã–ª–æ –º–µ–Ω—å—à–µ, —á–µ–º —Å–ª–æ–≤ - –Ω–µ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ —Ç–∞–∫–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
"""
        ),
        "history": [],
        "summary": ""
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ—á–∏—Å—Ç–∫–∏
    save_message_to_json(chat_id, "system", "–ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –æ—á–∏—â–µ–Ω–∞")
    
    await update.message.reply_text(
        "üßπ –ü–∞–º—è—Ç—å –æ—á–∏—â–µ–Ω–∞! –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä.\n\n"
        "–ï—â–µ –æ–¥–∏–Ω –ø—Å–∏—Ö–æ–ª–æ–≥...–ø–æ—Å–º–æ—Ç—Ä–∏–º, —Å–ø—Ä–∞–≤–∏—à—å—Å—è –ª–∏ —Ç—ã —Å–æ –º–Ω–æ–π",
        reply_markup=get_reply_keyboard()
    )

# 6) –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
async def get_feedback(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat_id
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å "–ø–µ—á–∞—Ç–∞–µ—Ç"
    await ctx.bot.send_chat_action(
        chat_id=chat_id, 
        action="typing"
    )
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞
    chat_history = load_chat_history(chat_id)
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    formatted_history = "\n\n".join(
        f"{'üë§ –ü—Å–∏—Ö–æ–ª–æ–≥' if msg['role'] == 'user' else 'ü§ñ –ö–ª–∏–µ–Ω—Ç'}: {msg['content']}"
        for msg in chat_history["messages"]
    )
    
    # –ü—Ä–æ–º–ø—Ç –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
    feedback_prompt = (
        "–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥-—Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â—É—é —É—á–µ–±–Ω—É—é —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫—É—é —Å–µ—Å—Å–∏—é, "
        "–≥–¥–µ –ø—Å–∏—Ö–æ–ª–æ–≥ –æ—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–ª –Ω–∞–≤—ã–∫–∏ —Ä–∞–±–æ—Ç—ã —Å –Ω–∞—Ä—Ü–∏—Å—Å–∏—á–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–æ–º.\n\n"
        "–î–∞–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –∞—Å–ø–µ–∫—Ç–∞–º:\n"
        "1. –ê–Ω–∞–ª–∏–∑ –∫–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω—ã—Ö —Ç–µ—Ö–Ω–∏–∫ –ø—Å–∏—Ö–æ–ª–æ–≥–∞\n"
        "2. –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã —Å –Ω–∞—Ä—Ü–∏—Å—Å–∏—á–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–æ–º\n"
        "3. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–ª—å—è–Ω—Å–∞\n"
        "4. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ª—É—à–∞–Ω–∏—è\n"
        "5. –†–∞–±–æ—Ç–∞ —Å —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ–º –∏ –∞–ø–∞—Ç–∏–µ–π –∫–ª–∏–µ–Ω—Ç–∞\n"
        "6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é —Ç–µ—Ö–Ω–∏–∫\n\n"
        "–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:\n"
        "- –ö—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ —Å–µ—Å—Å–∏–∏\n"
        "- –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã —Ä–∞–±–æ—Ç—ã –ø—Å–∏—Ö–æ–ª–æ–≥–∞\n"
        "- –û–±–ª–∞—Å—Ç–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è\n"
        "- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\n\n"
        f"–ò—Å—Ç–æ—Ä–∏—è —Å–µ—Å—Å–∏–∏:\n\n{formatted_history}"
    )
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –æ—Ç DeepSeek
        response = client.chat.completions.create(
            model="deepseek-chat",
            messages=[
                {"role": "system", "content": "–¢—ã ‚Äî –ø—Å–∏—Ö–æ–ª–æ–≥-—Å—É–ø–µ—Ä–≤–∏–∑–æ—Ä —Å 20-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ —Å —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º –ª–∏—á–Ω–æ—Å—Ç–∏."},
                {"role": "user", "content": feedback_prompt},
            ],
            max_tokens=3000,
        )
        feedback = response.choices[0].message.content
        feedback = asterisk_to_quote(feedback)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∏ –æ—Ç–≤–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
        save_message_to_json(chat_id, "user", "–ó–∞–ø—Ä–æ—Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏")
        save_message_to_json(chat_id, "assistant", feedback)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –∫—É—Å–∫–∞–º–∏ –Ω–µ –±–æ–ª–µ–µ 1024 —Å–∏–º–≤–æ–ª–æ–≤
        chunk_size = 1024
        chunks = [feedback[i:i + chunk_size] for i in range(0, len(feedback), chunk_size)]
        for idx, chunk in enumerate(chunks):
            await update.message.reply_text(
                chunk,
                parse_mode="Markdown",
                reply_markup=get_reply_keyboard() if idx == len(chunks) - 1 else None
            )
    
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏: {e}")
        await update.message.reply_text(
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏",
            reply_markup=get_reply_keyboard()
        )

# 7) —á–∞—Ç-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
async def chat(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat_id
    user_message = update.message.text
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–∞–ª —Å–æ–≥–ª–∞—Å–∏–µ
    if user_message == "‚úÖ –Ø —Å–æ–≥–ª–∞—à–∞—é—Å—å":
        await consent(update, ctx)
        return
    
    # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–û—á–∏—Å—Ç–∏—Ç—å –ø–∞–º—è—Ç—å"
    if user_message == "üßπ –û—á–∏—Å—Ç–∏—Ç—å –ø–∞–º—è—Ç—å":
        await clear_history(update, ctx)
        return
    
    # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"
    if user_message == "üìù –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å":
        await get_feedback(update, ctx)
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≥–ª–∞—Å–∏–µ
    if chat_id not in user_histories:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –¥–∞–π—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É /start"
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    save_message_to_json(chat_id, "user", user_message)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å "–ø–µ—á–∞—Ç–∞–µ—Ç"
    await ctx.bot.send_chat_action(
        chat_id=chat_id, 
        action="typing"
    )
    
    history_data = user_histories[chat_id]
    summary = history_data.get("summary", "")
    system_message = history_data["system"]
    history = history_data["history"]
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    history.append({"role": "user", "content": user_message})
    
    # –ï—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏—è –ø—Ä–µ–≤—ã—à–∞–µ—Ç –æ–∫–Ω–æ, —É–¥–∞–ª—è–µ–º —Å–∞–º–æ–µ —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –¥–æ–ø–æ–ª–Ω—è–µ–º summary
    if len(history) > MAX_WINDOW:
        oldest = history.pop(0)
        summary = update_summary(summary, oldest)
        history_data["summary"] = summary
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π –∏ summary
    full_history = [{"role": "system", "content": system_message}]
    if summary:
        full_history.append({"role": "system", "content": f"–û–±–æ–±—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: {summary}"})
    full_history.extend(history)
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç DeepSeek
    try:
        response = client.chat.completions.create(
            model="deepseek-chat",
            messages=full_history,
            max_tokens=2000,
        )
        assistant_reply = response.choices[0].message.content
        assistant_reply = asterisk_to_quote(assistant_reply)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é
        history.append({"role": "assistant", "content": assistant_reply})
        history_data["history"] = history
        user_histories[chat_id] = history_data
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
        save_message_to_json(chat_id, "assistant", assistant_reply)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        await update.message.reply_text(
            assistant_reply,
            parse_mode="Markdown",
            reply_markup=get_reply_keyboard()
        )
    
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await update.message.reply_text(
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞",
            reply_markup=get_reply_keyboard()
        )

# 8) ¬´–°–æ–±–∏—Ä–∞–µ–º¬ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º long-polling
def main() -> None:
    app = (ApplicationBuilder()
           .token(TELEGRAM_TOKEN)
           .build())

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("clear", clear_history))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, chat))

    app.run_polling()  # —Å–ª—É—à–∞–µ–º Telegram

if __name__ == "__main__":
    main()